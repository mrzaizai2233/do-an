<?php

namespace common\models;

use Yii;
use yii\data\ActiveDataProvider;

/**
 * This is the model class for table "{{%donhangchitiet}}".
 *
 * @property integer $id
 * @property integer $soluong
 * @property double $dongia
 * @property double $thanhtien
 * @property integer $hanghoa_id
 * @property integer $donhang_id
 *
 * @property Hanghoa $hanghoa
 * @property Donhang $donhang
 */
class Donhangchitiet extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%donhangchitiet}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['soluong', 'dongia', 'thanhtien'], 'required'],
            [['soluong', 'hanghoa_id', 'donhang_id'], 'integer'],
            [['dongia', 'thanhtien'], 'number'],
            [['hanghoa_id'], 'exist', 'skipOnError' => true, 'targetClass' => Hanghoa::className(), 'targetAttribute' => ['hanghoa_id' => 'id']],
            [['donhang_id'], 'exist', 'skipOnError' => true, 'targetClass' => Donhang::className(), 'targetAttribute' => ['donhang_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'soluong' => 'Soluong',
            'dongia' => 'Dongia',
            'thanhtien' => 'Thanhtien',
            'hanghoa_id' => 'Hanghoa ID',
            'donhang_id' => 'Donhang ID',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getHanghoa()
    {
        return $this->hasOne(Hanghoa::className(), ['id' => 'hanghoa_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDonhang()
    {
        return $this->hasOne(Donhang::className(), ['id' => 'donhang_id']);
    }
    public function getDonhangchitiet($id){
        $query = Donhangchitiet::find();
        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination'=>[
                'pageSize'=>5
            ]
        ]);
        $query->andFilterWhere(['donhang_id'=>$id]);

        return $dataProvider;
    }

    public function afterDelete()
    {
        $donhang= $this->donhang;
        $tongtienmoi = $donhang->tongtien-$this->thanhtien;
        $soluongmoi = $donhang->soluong-$this->soluong;
        $donhang->updateAttributes(['tongtien'=>$tongtienmoi,'soluong'=>$soluongmoi]);

        if (count($donhang->donhangchitiets)==0){
            $donhang->delete();
        }
        parent::afterDelete(); // TODO: Change the autogenerated stub
    }
}
