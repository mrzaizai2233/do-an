<?php

namespace common\models;

use Yii;
use yii\db\Expression;
use yii\validators\Validator;
/**
 * This is the model class for table "{{%discount}}".
 *
 * @property integer $id
 * @property string $name
 * @property string $type
 * @property double $total_amount
 * @property double $discount
 * @property string $date_start
 * @property string $date_end
 * @property string $date_added
 * @property integer $status
 * @property string $description
 * @property string $dateStart_DateEnd
 *
 * @property DiscountCategory[] $discountCategories
 * @property DiscountProduct[] $discountProducts
 */
class Discount extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%discount}}';
    }
    public $dateStart_DateEnd;
    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'type', 'total_amount', 'discount', 'date_start', 'date_end', 'status'], 'required','message'=>'{attribute} không được để trống'],
            [['type'], 'string'],
            [['total_amount', 'discount'], 'number'],
            [['date_start', 'date_end', 'date_added'], 'safe'],
            [['status'], 'integer'],
            [['name'], 'string', 'max' => 128],
            [['description'], 'string', 'max' => 255],
            ['date_end', 'compare', 'compareAttribute' => 'date_start', 'operator' => '>','message'=>'Ngày kết thúc phải lớn hơn ngày bắt đầu'],
            [['type'], 'validateTypeFixedamount','when'=>function($model){
                return $model->type=='fixedamount';
            }],
            [['type'], 'validateTypePercentage','when'=>function($model){
                return $model->type=='percentage';
            }],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Tên',
            'type' => 'Kiểu',
            'total_amount' => 'Số lượng tiền tối thiểu',
            'discount' => 'Số tiền giảm giá',
            'date_start' => 'Ngày Bắt Đầu',
            'date_end' => 'Ngày Kết Thúc',
            'date_added' => 'Ngày thêm',
            'status' => 'Trạng thái',
            'description' => 'Mô tả',
            'dateStart_DateEnd' => 'Ngày bắt đầu - Ngày kết thúc',
        ];
    }

    public function validateTypePercentage($attribute, $params){

            if($this->discount>100){
                $this->addError('discount','Không được lớn hơn 100 khi kiểu giảm giá là Phần trăm');
            }
    }
    public function validateTypeFixedamount($attribute, $params){

            if($this->discount>$this->total_amount){
                $this->addError('discount','Không được lớn hơn tiền tối thiểu khi kiểu giảm giá là số');
            }
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDiscountCategories()
    {
        return $this->hasMany(DiscountCategory::className(), ['discount_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDiscountProducts()
    {
        return $this->hasMany(DiscountProduct::className(), ['discount_id' => 'id']);
    }
    public function beforeSave($insert)
    {
        $this->date_start=base::dmy2ymd($this->date_start);
        $this->date_end=base::dmy2ymd($this->date_end);
        $this->date_added= new Expression('now()');
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
